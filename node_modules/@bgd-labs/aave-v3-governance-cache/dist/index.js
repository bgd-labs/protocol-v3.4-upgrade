import { createRequire } from "node:module";
var __create = Object.create;
var __getProtoOf = Object.getPrototypeOf;
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};
var __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);
var __require = /* @__PURE__ */ createRequire(import.meta.url);

// src/index.ts
function isProposalFinal(state) {
  return FINAL_PROPOSAL_STATES.includes(state);
}
function isPayloadFinal(state) {
  return FINAL_PAYLOAD_STATES.includes(state);
}
var ProposalState;
((ProposalState2) => {
  ProposalState2[ProposalState2["Null"] = 0] = "Null";
  ProposalState2[ProposalState2["Created"] = 1] = "Created";
  ProposalState2[ProposalState2["Active"] = 2] = "Active";
  ProposalState2[ProposalState2["Queued"] = 3] = "Queued";
  ProposalState2[ProposalState2["Executed"] = 4] = "Executed";
  ProposalState2[ProposalState2["Failed"] = 5] = "Failed";
  ProposalState2[ProposalState2["Cancelled"] = 6] = "Cancelled";
  ProposalState2[ProposalState2["Expired"] = 7] = "Expired";
})(ProposalState ||= {});
var FINAL_PROPOSAL_STATES = [
  4 /* Executed */,
  5 /* Failed */,
  6 /* Cancelled */,
  7 /* Expired */
];
var PayloadState;
((PayloadState2) => {
  PayloadState2[PayloadState2["None"] = 0] = "None";
  PayloadState2[PayloadState2["Created"] = 1] = "Created";
  PayloadState2[PayloadState2["Queued"] = 2] = "Queued";
  PayloadState2[PayloadState2["Executed"] = 3] = "Executed";
  PayloadState2[PayloadState2["Cancelled"] = 4] = "Cancelled";
  PayloadState2[PayloadState2["Expired"] = 5] = "Expired";
})(PayloadState ||= {});
var FINAL_PAYLOAD_STATES = [
  4 /* Cancelled */,
  3 /* Executed */,
  5 /* Expired */
];
export {
  isProposalFinal,
  isPayloadFinal,
  ProposalState,
  PayloadState,
  FINAL_PROPOSAL_STATES,
  FINAL_PAYLOAD_STATES
};

//# debugId=7044DF7B6C28321064756E2164756E21
