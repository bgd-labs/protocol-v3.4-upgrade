import { createRequire } from "node:module";
var __create = Object.create;
var __getProtoOf = Object.getPrototypeOf;
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};
var __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);
var __require = /* @__PURE__ */ createRequire(import.meta.url);

// src/errors.ts
var ISSUES_FETCHING_PAYLOAD = "ISSUES_FETCHING_PAYLOAD";
var ISSUES_FETCHING_PROPOSAL = "ISSUES_FETCHING_PROPOSAL";

// src/providers/fallbackProvider.ts
var fallbackProvider = (...providers) => ({
  async getPayload(args) {
    for (let i = 0;i < providers.length; i++) {
      try {
        const response = await providers[i].getPayload(args);
        return response;
      } catch (e) {
        console.log(e);
        console.log("falling back to next provider");
      }
    }
    throw new Error(ISSUES_FETCHING_PAYLOAD);
  },
  async getProposal(args) {
    for (let i = 0;i < providers.length; i++) {
      try {
        const response = await providers[i].getProposal(args);
        return response;
      } catch (e) {
        console.log(e);
        console.log("falling back to next provider");
      }
    }
    throw new Error(ISSUES_FETCHING_PROPOSAL);
  }
});
export {
  fallbackProvider
};

//# debugId=29B2EA418349CF8264756E2164756E21
