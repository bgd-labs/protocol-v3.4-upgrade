{
  "version": 3,
  "sources": ["../src/errors.ts", "../src/providers/fallbackProvider.ts"],
  "sourcesContent": [
    "export const ISSUES_FETCHING_PAYLOAD = 'ISSUES_FETCHING_PAYLOAD';\nexport const ISSUES_FETCHING_PROPOSAL = 'ISSUES_FETCHING_PROPOSAL';\n",
    "import type {GovernanceCacheAdapter} from '..';\nimport {ISSUES_FETCHING_PAYLOAD, ISSUES_FETCHING_PROPOSAL} from '../errors';\n\nexport const fallbackProvider = <T extends GovernanceCacheAdapter>(\n  ...providers: T[]\n): GovernanceCacheAdapter => ({\n  async getPayload(args) {\n    for (let i = 0; i < providers.length; i++) {\n      try {\n        const response = await providers[i].getPayload(args);\n        return response;\n      } catch (e) {\n        console.log(e);\n        console.log('falling back to next provider');\n      }\n    }\n    throw new Error(ISSUES_FETCHING_PAYLOAD);\n  },\n  async getProposal(args) {\n    for (let i = 0; i < providers.length; i++) {\n      try {\n        const response = await providers[i].getProposal(args);\n        return response;\n      } catch (e) {\n        console.log(e);\n        console.log('falling back to next provider');\n      }\n    }\n    throw new Error(ISSUES_FETCHING_PROPOSAL);\n  },\n});\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAM,0BAA0B;AAChC,IAAM,2BAA2B;;;ACEjC,IAAM,mBAAmB,IAC3B,eACyB;AAAA,OACtB,WAAU,CAAC,MAAM;AACrB,aAAS,IAAI,EAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI;AACF,cAAM,WAAW,MAAM,UAAU,GAAG,WAAW,IAAI;AACnD,eAAO;AAAA,eACA,GAAP;AACA,gBAAQ,IAAI,CAAC;AACb,gBAAQ,IAAI,+BAA+B;AAAA;AAAA,IAE/C;AACA,UAAM,IAAI,MAAM,uBAAuB;AAAA;AAAA,OAEnC,YAAW,CAAC,MAAM;AACtB,aAAS,IAAI,EAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI;AACF,cAAM,WAAW,MAAM,UAAU,GAAG,YAAY,IAAI;AACpD,eAAO;AAAA,eACA,GAAP;AACA,gBAAQ,IAAI,CAAC;AACb,gBAAQ,IAAI,+BAA+B;AAAA;AAAA,IAE/C;AACA,UAAM,IAAI,MAAM,wBAAwB;AAAA;AAE5C;",
  "debugId": "29B2EA418349CF8264756E2164756E21",
  "names": []
}