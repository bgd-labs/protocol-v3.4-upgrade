import * as viem from 'viem';
import { GetLogsReturnType, Client, Address, Hex } from 'viem';
import { AbiEvent } from 'abitype';
import * as viem_zksync from 'viem/zksync';
import * as viem_chains from 'viem/chains';

interface StorageItem {
    astId: number;
    contract: string;
    label: string;
    offset: number;
    slot: string;
    type: string;
}
interface TypeItem {
    encoding: string;
    label: string;
    numberOfBytes: string;
    base?: string;
    key?: string;
    value?: string;
    members?: Member[];
}
interface Member {
    astId: number;
    contract: string;
    label: string;
    offset: number;
    slot: string;
    type: string;
}
interface Storage {
    storage: StorageItem[];
    types: {
        [key: string]: TypeItem;
    };
}

/**
 * Generates a markdown table comparing two foundry storage layout snapshots
 * @param layoutBefore
 * @param layoutAfter
 * @returns markdown string
 */
declare function compareStorageLayouts(layoutBefore: Storage, layoutAfter: Storage): string;

declare const ChainId: {
    readonly mainnet: 1;
    readonly goerli: 5;
    readonly polygon: 137;
    readonly mumbai: 80001;
    readonly avalanche: 43114;
    readonly fuji: 43113;
    readonly arbitrum_one: 42161;
    readonly arbitrum_goerli: 421613;
    readonly arbitrum_sepolia: 421614;
    readonly fantom: 250;
    readonly fantom_testnet: 4002;
    readonly optimism: 10;
    readonly optimism_sepolia: 11155420;
    readonly optimism_goerli: 420;
    readonly harmony: 1666600000;
    readonly sepolia: 11155111;
    readonly scroll: 534352;
    readonly scroll_sepolia: 534351;
    readonly metis: 1088;
    readonly base: 8453;
    readonly base_sepolia: 84532;
    readonly bnb: 56;
    readonly gnosis: 100;
    readonly zkEVM: 1101;
    readonly celo: 42220;
    readonly zkSync: 324;
};

interface GetContractDeploymentBlockArgs {
    client: Client;
    contractAddress: Address;
    fromBlock: bigint;
    toBlock: bigint;
    maxDelta: bigint;
}
/**
 * In some cases it's important to know when a contract was first seen onChain.
 * This data is hard to obtain, as it's not indexed data.
 * On way of doing it is recursively checking on an archive node when the code was first seen.
 * @param client a viem Client
 * @param fromBlock a block on which the contract is not yet deployed
 * @param toBlock a block on which the contract is deployed
 * @param contractAddress address of the contract
 * @param maxDelta the maximum block distance between the returned block and the deployment block
 * @returns a blockNumber on which the contract is not yet deployed with a max delta to when it was deployed
 */
declare function getContractDeploymentBlock({ client, contractAddress, fromBlock, toBlock, maxDelta, }: GetContractDeploymentBlockArgs): Promise<bigint>;
interface GetBlockAtTimestampArgs {
    client: Client;
    timestamp: bigint;
    fromBlock: bigint;
    toBlock: bigint;
    maxDelta: bigint;
}
/**
 * Returns a block before the specified timestamp with a maximum of maxDelta divergence
 * @param client
 * @param fromBlock
 * @param toBlock
 * @param timestamp
 * @param maxDelta
 * @returns blocknumber
 */
declare function getBlockAtTimestamp({ client, timestamp, fromBlock, toBlock, maxDelta, }: GetBlockAtTimestampArgs): Promise<{
    number: bigint;
    timestamp: bigint;
    hash: `0x${string}`;
    nonce: `0x${string}`;
    logsBloom: `0x${string}`;
    baseFeePerGas: bigint | null;
    blobGasUsed: bigint;
    difficulty: bigint;
    excessBlobGas: bigint;
    extraData: `0x${string}`;
    gasLimit: bigint;
    gasUsed: bigint;
    miner: `0x${string}`;
    mixHash: `0x${string}`;
    parentHash: `0x${string}`;
    receiptsRoot: `0x${string}`;
    sealFields: `0x${string}`[];
    sha3Uncles: `0x${string}`;
    size: bigint;
    stateRoot: `0x${string}`;
    totalDifficulty: bigint | null;
    transactionsRoot: `0x${string}`;
    uncles: `0x${string}`[];
    withdrawals?: viem.Withdrawal[] | undefined;
    withdrawalsRoot?: `0x${string}` | undefined;
    transactions: `0x${string}`[];
}>;
interface GetLogsArgs<TAbiEvents extends AbiEvent[] | undefined> {
    client: Client;
    events: TAbiEvents;
    address: Address | Address[];
    fromBlock: bigint;
    toBlock: bigint;
}
/**
 * A thin wrapper around eth_getLogs which does batching & error handing and some known scenarios
 * @param param0
 * @returns logs
 */
declare function strategicGetLogs<TAbiEvents extends AbiEvent[] | undefined>({ client, events, address, fromBlock, toBlock, }: GetLogsArgs<TAbiEvents>): Promise<GetLogsReturnType<undefined, TAbiEvents>>;
/**
 * fetches logs recursively
 */
declare function getLogsRecursive<TAbiEvents extends AbiEvent[] | undefined>({ client, events, address, fromBlock, toBlock, }: GetLogsArgs<TAbiEvents>): Promise<GetLogsReturnType<undefined, TAbiEvents>>;

declare const mainnetClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://etherscan.io";
                readonly apiUrl: "https://api.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0x8cab227b1162f03b8338331adaad7aadc83b895e";
                readonly blockCreated: 18958930;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14353601;
            };
        };
        id: 1;
        name: "Ethereum";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://cloudflare-eth.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://etherscan.io";
                readonly apiUrl: "https://api.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0x8cab227b1162f03b8338331adaad7aadc83b895e";
                readonly blockCreated: 18958930;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14353601;
            };
        };
        id: 1;
        name: "Ethereum";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://cloudflare-eth.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://etherscan.io";
                readonly apiUrl: "https://api.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0x8cab227b1162f03b8338331adaad7aadc83b895e";
                readonly blockCreated: 18958930;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14353601;
            };
        };
        id: 1;
        name: "Ethereum";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://cloudflare-eth.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://etherscan.io";
                readonly apiUrl: "https://api.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0x8cab227b1162f03b8338331adaad7aadc83b895e";
                readonly blockCreated: 18958930;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14353601;
            };
        };
        id: 1;
        name: "Ethereum";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://cloudflare-eth.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://etherscan.io";
                readonly apiUrl: "https://api.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0x8cab227b1162f03b8338331adaad7aadc83b895e";
                readonly blockCreated: 18958930;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14353601;
            };
        };
        id: 1;
        name: "Ethereum";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://cloudflare-eth.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const arbitrumClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://arbiscan.io";
                readonly apiUrl: "https://api.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7654707;
            };
        };
        id: 42161;
        name: "Arbitrum One";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://arb1.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://arbiscan.io";
                readonly apiUrl: "https://api.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7654707;
            };
        };
        id: 42161;
        name: "Arbitrum One";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://arb1.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://arbiscan.io";
                readonly apiUrl: "https://api.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7654707;
            };
        };
        id: 42161;
        name: "Arbitrum One";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://arb1.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://arbiscan.io";
                readonly apiUrl: "https://api.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7654707;
            };
        };
        id: 42161;
        name: "Arbitrum One";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://arb1.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://arbiscan.io";
                readonly apiUrl: "https://api.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7654707;
            };
        };
        id: 42161;
        name: "Arbitrum One";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://arb1.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const polygonClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://polygonscan.com";
                readonly apiUrl: "https://api.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 137;
        name: "Polygon";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://polygon-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://polygonscan.com";
                readonly apiUrl: "https://api.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 137;
        name: "Polygon";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://polygon-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://polygonscan.com";
                readonly apiUrl: "https://api.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 137;
        name: "Polygon";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://polygon-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://polygonscan.com";
                readonly apiUrl: "https://api.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 137;
        name: "Polygon";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://polygon-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://polygonscan.com";
                readonly apiUrl: "https://api.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 137;
        name: "Polygon";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://polygon-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const optimismClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Optimism Explorer";
                readonly url: "https://optimistic.etherscan.io";
                readonly apiUrl: "https://api-optimistic.etherscan.io";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0xdfe97868233d1aa22e815a266982f2cf17685a27";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 4286263;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed";
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 10;
        name: "OP Mainnet";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.optimism.io"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Optimism Explorer";
                readonly url: "https://optimistic.etherscan.io";
                readonly apiUrl: "https://api-optimistic.etherscan.io";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0xdfe97868233d1aa22e815a266982f2cf17685a27";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 4286263;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed";
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 10;
        name: "OP Mainnet";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.optimism.io"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Optimism Explorer";
                readonly url: "https://optimistic.etherscan.io";
                readonly apiUrl: "https://api-optimistic.etherscan.io";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0xdfe97868233d1aa22e815a266982f2cf17685a27";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 4286263;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed";
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 10;
        name: "OP Mainnet";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.optimism.io"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Optimism Explorer";
                readonly url: "https://optimistic.etherscan.io";
                readonly apiUrl: "https://api-optimistic.etherscan.io";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0xdfe97868233d1aa22e815a266982f2cf17685a27";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 4286263;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed";
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 10;
        name: "OP Mainnet";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.optimism.io"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Optimism Explorer";
                readonly url: "https://optimistic.etherscan.io";
                readonly apiUrl: "https://api-optimistic.etherscan.io";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0xdfe97868233d1aa22e815a266982f2cf17685a27";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 4286263;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed";
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 10;
        name: "OP Mainnet";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.optimism.io"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const metisClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Andromeda Explorer";
                readonly url: "https://andromeda-explorer.metis.io";
                readonly apiUrl: "https://andromeda-explorer.metis.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 2338552;
            };
        };
        id: 1088;
        name: "Metis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Metis";
            readonly symbol: "METIS";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://andromeda.metis.io/?owner=1088"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Andromeda Explorer";
                readonly url: "https://andromeda-explorer.metis.io";
                readonly apiUrl: "https://andromeda-explorer.metis.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 2338552;
            };
        };
        id: 1088;
        name: "Metis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Metis";
            readonly symbol: "METIS";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://andromeda.metis.io/?owner=1088"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Andromeda Explorer";
                readonly url: "https://andromeda-explorer.metis.io";
                readonly apiUrl: "https://andromeda-explorer.metis.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 2338552;
            };
        };
        id: 1088;
        name: "Metis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Metis";
            readonly symbol: "METIS";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://andromeda.metis.io/?owner=1088"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Andromeda Explorer";
                readonly url: "https://andromeda-explorer.metis.io";
                readonly apiUrl: "https://andromeda-explorer.metis.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 2338552;
            };
        };
        id: 1088;
        name: "Metis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Metis";
            readonly symbol: "METIS";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://andromeda.metis.io/?owner=1088"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Andromeda Explorer";
                readonly url: "https://andromeda-explorer.metis.io";
                readonly apiUrl: "https://andromeda-explorer.metis.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 2338552;
            };
        };
        id: 1088;
        name: "Metis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Metis";
            readonly symbol: "METIS";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://andromeda.metis.io/?owner=1088"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const baseClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://basescan.org";
                readonly apiUrl: "https://api.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0x56315b90c40730925ec5485cf004d835058518A0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 5022;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0x49048044D57e1C92A77f79988d21Fa8fAF74E97e";
                    readonly blockCreated: 17482143;
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x3154Cf16ccdb4C6d922629664174b904d80F2C35";
                    readonly blockCreated: 17482143;
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 8453;
        name: "Base";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.base.org"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://basescan.org";
                readonly apiUrl: "https://api.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0x56315b90c40730925ec5485cf004d835058518A0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 5022;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0x49048044D57e1C92A77f79988d21Fa8fAF74E97e";
                    readonly blockCreated: 17482143;
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x3154Cf16ccdb4C6d922629664174b904d80F2C35";
                    readonly blockCreated: 17482143;
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 8453;
        name: "Base";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.base.org"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://basescan.org";
                readonly apiUrl: "https://api.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0x56315b90c40730925ec5485cf004d835058518A0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 5022;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0x49048044D57e1C92A77f79988d21Fa8fAF74E97e";
                    readonly blockCreated: 17482143;
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x3154Cf16ccdb4C6d922629664174b904d80F2C35";
                    readonly blockCreated: 17482143;
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 8453;
        name: "Base";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.base.org"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://basescan.org";
                readonly apiUrl: "https://api.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0x56315b90c40730925ec5485cf004d835058518A0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 5022;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0x49048044D57e1C92A77f79988d21Fa8fAF74E97e";
                    readonly blockCreated: 17482143;
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x3154Cf16ccdb4C6d922629664174b904d80F2C35";
                    readonly blockCreated: 17482143;
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 8453;
        name: "Base";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.base.org"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://basescan.org";
                readonly apiUrl: "https://api.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 1: {
                    readonly address: "0x56315b90c40730925ec5485cf004d835058518A0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 5022;
            };
            readonly portal: {
                readonly 1: {
                    readonly address: "0x49048044D57e1C92A77f79988d21Fa8fAF74E97e";
                    readonly blockCreated: 17482143;
                };
            };
            readonly l1StandardBridge: {
                readonly 1: {
                    readonly address: "0x3154Cf16ccdb4C6d922629664174b904d80F2C35";
                    readonly blockCreated: 17482143;
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 8453;
        name: "Base";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.base.org"];
            };
        };
        sourceId: 1;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const fantomClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://ftmscan.com";
                readonly apiUrl: "https://api.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 33001987;
            };
        };
        id: 250;
        name: "Fantom";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/fantom"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://ftmscan.com";
                readonly apiUrl: "https://api.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 33001987;
            };
        };
        id: 250;
        name: "Fantom";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/fantom"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://ftmscan.com";
                readonly apiUrl: "https://api.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 33001987;
            };
        };
        id: 250;
        name: "Fantom";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/fantom"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://ftmscan.com";
                readonly apiUrl: "https://api.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 33001987;
            };
        };
        id: 250;
        name: "Fantom";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/fantom"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://ftmscan.com";
                readonly apiUrl: "https://api.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 33001987;
            };
        };
        id: 250;
        name: "Fantom";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/fantom"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const bnbClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "BscScan";
                readonly url: "https://bscscan.com";
                readonly apiUrl: "https://api.bscscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 15921452;
            };
        };
        id: 56;
        name: "BNB Smart Chain";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "BNB";
            readonly symbol: "BNB";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/bsc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "BscScan";
                readonly url: "https://bscscan.com";
                readonly apiUrl: "https://api.bscscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 15921452;
            };
        };
        id: 56;
        name: "BNB Smart Chain";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "BNB";
            readonly symbol: "BNB";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/bsc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "BscScan";
                readonly url: "https://bscscan.com";
                readonly apiUrl: "https://api.bscscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 15921452;
            };
        };
        id: 56;
        name: "BNB Smart Chain";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "BNB";
            readonly symbol: "BNB";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/bsc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "BscScan";
                readonly url: "https://bscscan.com";
                readonly apiUrl: "https://api.bscscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 15921452;
            };
        };
        id: 56;
        name: "BNB Smart Chain";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "BNB";
            readonly symbol: "BNB";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/bsc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "BscScan";
                readonly url: "https://bscscan.com";
                readonly apiUrl: "https://api.bscscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 15921452;
            };
        };
        id: 56;
        name: "BNB Smart Chain";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "BNB";
            readonly symbol: "BNB";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/bsc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const avalancheClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowScan";
                readonly url: "https://snowscan.xyz";
                readonly apiUrl: "https://api.snowscan.xyz/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 11907934;
            };
        };
        id: 43114;
        name: "Avalanche";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowScan";
                readonly url: "https://snowscan.xyz";
                readonly apiUrl: "https://api.snowscan.xyz/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 11907934;
            };
        };
        id: 43114;
        name: "Avalanche";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "SnowScan";
                readonly url: "https://snowscan.xyz";
                readonly apiUrl: "https://api.snowscan.xyz/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 11907934;
            };
        };
        id: 43114;
        name: "Avalanche";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowScan";
                readonly url: "https://snowscan.xyz";
                readonly apiUrl: "https://api.snowscan.xyz/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 11907934;
            };
        };
        id: 43114;
        name: "Avalanche";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowScan";
                readonly url: "https://snowscan.xyz";
                readonly apiUrl: "https://api.snowscan.xyz/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 11907934;
            };
        };
        id: 43114;
        name: "Avalanche";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const gnosisClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Gnosisscan";
                readonly url: "https://gnosisscan.io";
                readonly apiUrl: "https://api.gnosisscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 21022491;
            };
        };
        id: 100;
        name: "Gnosis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Gnosis";
            readonly symbol: "xDAI";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.gnosischain.com"];
                readonly webSocket: readonly ["wss://rpc.gnosischain.com/wss"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Gnosisscan";
                readonly url: "https://gnosisscan.io";
                readonly apiUrl: "https://api.gnosisscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 21022491;
            };
        };
        id: 100;
        name: "Gnosis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Gnosis";
            readonly symbol: "xDAI";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.gnosischain.com"];
                readonly webSocket: readonly ["wss://rpc.gnosischain.com/wss"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Gnosisscan";
                readonly url: "https://gnosisscan.io";
                readonly apiUrl: "https://api.gnosisscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 21022491;
            };
        };
        id: 100;
        name: "Gnosis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Gnosis";
            readonly symbol: "xDAI";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.gnosischain.com"];
                readonly webSocket: readonly ["wss://rpc.gnosischain.com/wss"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Gnosisscan";
                readonly url: "https://gnosisscan.io";
                readonly apiUrl: "https://api.gnosisscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 21022491;
            };
        };
        id: 100;
        name: "Gnosis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Gnosis";
            readonly symbol: "xDAI";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.gnosischain.com"];
                readonly webSocket: readonly ["wss://rpc.gnosischain.com/wss"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Gnosisscan";
                readonly url: "https://gnosisscan.io";
                readonly apiUrl: "https://api.gnosisscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 21022491;
            };
        };
        id: 100;
        name: "Gnosis";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Gnosis";
            readonly symbol: "xDAI";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.gnosischain.com"];
                readonly webSocket: readonly ["wss://rpc.gnosischain.com/wss"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const scrollClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Scrollscan";
                readonly url: "https://scrollscan.com";
                readonly apiUrl: "https://api.scrollscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14;
            };
        };
        id: 534352;
        name: "Scroll";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.scroll.io"];
                readonly webSocket: readonly ["wss://wss-rpc.scroll.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Scrollscan";
                readonly url: "https://scrollscan.com";
                readonly apiUrl: "https://api.scrollscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14;
            };
        };
        id: 534352;
        name: "Scroll";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.scroll.io"];
                readonly webSocket: readonly ["wss://wss-rpc.scroll.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Scrollscan";
                readonly url: "https://scrollscan.com";
                readonly apiUrl: "https://api.scrollscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14;
            };
        };
        id: 534352;
        name: "Scroll";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.scroll.io"];
                readonly webSocket: readonly ["wss://wss-rpc.scroll.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Scrollscan";
                readonly url: "https://scrollscan.com";
                readonly apiUrl: "https://api.scrollscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14;
            };
        };
        id: 534352;
        name: "Scroll";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.scroll.io"];
                readonly webSocket: readonly ["wss://wss-rpc.scroll.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Scrollscan";
                readonly url: "https://scrollscan.com";
                readonly apiUrl: "https://api.scrollscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 14;
            };
        };
        id: 534352;
        name: "Scroll";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.scroll.io"];
                readonly webSocket: readonly ["wss://wss-rpc.scroll.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const zkEVMClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://zkevm.polygonscan.com";
                readonly apiUrl: "https://api-zkevm.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 57746;
            };
        };
        id: 1101;
        name: "Polygon zkEVM";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://zkevm-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://zkevm.polygonscan.com";
                readonly apiUrl: "https://api-zkevm.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 57746;
            };
        };
        id: 1101;
        name: "Polygon zkEVM";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://zkevm-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://zkevm.polygonscan.com";
                readonly apiUrl: "https://api-zkevm.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 57746;
            };
        };
        id: 1101;
        name: "Polygon zkEVM";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://zkevm-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://zkevm.polygonscan.com";
                readonly apiUrl: "https://api-zkevm.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 57746;
            };
        };
        id: 1101;
        name: "Polygon zkEVM";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://zkevm-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://zkevm.polygonscan.com";
                readonly apiUrl: "https://api-zkevm.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 57746;
            };
        };
        id: 1101;
        name: "Polygon zkEVM";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://zkevm-rpc.com"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const celoClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Celo Explorer";
                readonly url: "https://explorer.celo.org/mainnet";
                readonly apiUrl: "https://explorer.celo.org/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
                readonly blockCreated: 13112599;
            };
        };
        id: 42220;
        name: "Celo";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "CELO";
            readonly symbol: "CELO";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://forno.celo.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: ("nonce" | "difficulty" | "gasLimit" | "mixHash" | "uncles")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.CeloBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.CeloRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.CeloTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    randomness: {
                        committed: `0x${string}`;
                        revealed: `0x${string}`;
                    };
                } & {
                    nonce: never;
                    difficulty: never;
                    gasLimit: never;
                    mixHash: never;
                    uncles: never;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transaction";
            };
            readonly transactionRequest: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.CeloTransactionRequest>) => {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem.TransactionSerializable<bigint, number> | viem_chains.CeloTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Celo Explorer";
                readonly url: "https://explorer.celo.org/mainnet";
                readonly apiUrl: "https://explorer.celo.org/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
                readonly blockCreated: 13112599;
            };
        };
        id: 42220;
        name: "Celo";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "CELO";
            readonly symbol: "CELO";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://forno.celo.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: ("nonce" | "difficulty" | "gasLimit" | "mixHash" | "uncles")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.CeloBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.CeloRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.CeloTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    randomness: {
                        committed: `0x${string}`;
                        revealed: `0x${string}`;
                    };
                } & {
                    nonce: never;
                    difficulty: never;
                    gasLimit: never;
                    mixHash: never;
                    uncles: never;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transaction";
            };
            readonly transactionRequest: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.CeloTransactionRequest>) => {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem.TransactionSerializable<bigint, number> | viem_chains.CeloTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Celo Explorer";
                readonly url: "https://explorer.celo.org/mainnet";
                readonly apiUrl: "https://explorer.celo.org/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
                readonly blockCreated: 13112599;
            };
        };
        id: 42220;
        name: "Celo";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "CELO";
            readonly symbol: "CELO";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://forno.celo.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: ("nonce" | "difficulty" | "gasLimit" | "mixHash" | "uncles")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.CeloBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.CeloRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.CeloTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    randomness: {
                        committed: `0x${string}`;
                        revealed: `0x${string}`;
                    };
                } & {
                    nonce: never;
                    difficulty: never;
                    gasLimit: never;
                    mixHash: never;
                    uncles: never;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transaction";
            };
            readonly transactionRequest: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.CeloTransactionRequest>) => {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem.TransactionSerializable<bigint, number> | viem_chains.CeloTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Celo Explorer";
                readonly url: "https://explorer.celo.org/mainnet";
                readonly apiUrl: "https://explorer.celo.org/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
                readonly blockCreated: 13112599;
            };
        };
        id: 42220;
        name: "Celo";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "CELO";
            readonly symbol: "CELO";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://forno.celo.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: ("nonce" | "difficulty" | "gasLimit" | "mixHash" | "uncles")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.CeloBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.CeloRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.CeloTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    randomness: {
                        committed: `0x${string}`;
                        revealed: `0x${string}`;
                    };
                } & {
                    nonce: never;
                    difficulty: never;
                    gasLimit: never;
                    mixHash: never;
                    uncles: never;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transaction";
            };
            readonly transactionRequest: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.CeloTransactionRequest>) => {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem.TransactionSerializable<bigint, number> | viem_chains.CeloTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Celo Explorer";
                readonly url: "https://explorer.celo.org/mainnet";
                readonly apiUrl: "https://explorer.celo.org/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xcA11bde05977b3631167028862bE2a173976CA11";
                readonly blockCreated: 13112599;
            };
        };
        id: 42220;
        name: "Celo";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "CELO";
            readonly symbol: "CELO";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://forno.celo.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: false;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: ("nonce" | "difficulty" | "gasLimit" | "mixHash" | "uncles")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.CeloBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.CeloRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.CeloTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    randomness: {
                        committed: `0x${string}`;
                        revealed: `0x${string}`;
                    };
                } & {
                    nonce: never;
                    difficulty: never;
                    gasLimit: never;
                    mixHash: never;
                    uncles: never;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: `0x${string}` | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                    type: "0x7c";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7c" | "0x7b" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                    type: "0x7b";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip42";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee: bigint | null;
                    gatewayFeeRecipient: `0x${string}` | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "cip64";
                    feeCurrency: `0x${string}` | null;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transaction";
            };
            readonly transactionRequest: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.CeloTransactionRequest>) => {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7c" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: `0x${string}` | undefined;
                    gatewayFeeRecipient?: `0x${string}` | undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x7b" | undefined;
                    maxFeePerBlobGas?: undefined;
                    feeCurrency?: `0x${string}` | undefined;
                    gatewayFee?: undefined;
                    gatewayFeeRecipient?: undefined;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem.TransactionSerializable<bigint, number> | viem_chains.CeloTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const zkSyncClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://era.zksync.network/";
                readonly apiUrl: "https://api-era.zksync.network/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
            };
        };
        id: 324;
        name: "zkSync Era";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Ether";
            readonly symbol: "ETH";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.era.zksync.io"];
                readonly webSocket: readonly ["wss://mainnet.era.zksync.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom: {
            readonly getEip712Domain: viem_zksync.EIP712DomainFn<viem_chains.ZkSyncTransactionSerializable, viem_chains.ZkSyncEIP712TransactionSignable>;
        };
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.ZkSyncRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.ZkSyncRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.ZkSyncTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    l1BatchNumber: bigint | null;
                    l1BatchTimestamp: bigint | null;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransaction<boolean>>, viem_chains.ZkSyncRpcTransaction<boolean>>) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem_chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem_chains.ZkSyncTransactionType;
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                    l2ToL1Logs: viem_chains.ZkSyncL2ToL1Log[];
                };
                type: "transactionReceipt";
            };
            readonly transactionRequest: {
                exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.ZkSyncTransactionRequest>) => ({
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                }) & {
                    gasPerPubdata: never;
                    paymaster: never;
                    factoryDeps: never;
                    paymasterInput: never;
                    customSignature: never;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.ZkSyncTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "zksync-era";
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://era.zksync.network/";
                readonly apiUrl: "https://api-era.zksync.network/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
            };
        };
        id: 324;
        name: "zkSync Era";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Ether";
            readonly symbol: "ETH";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.era.zksync.io"];
                readonly webSocket: readonly ["wss://mainnet.era.zksync.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom: {
            readonly getEip712Domain: viem_zksync.EIP712DomainFn<viem_chains.ZkSyncTransactionSerializable, viem_chains.ZkSyncEIP712TransactionSignable>;
        };
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.ZkSyncRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.ZkSyncRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.ZkSyncTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    l1BatchNumber: bigint | null;
                    l1BatchTimestamp: bigint | null;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransaction<boolean>>, viem_chains.ZkSyncRpcTransaction<boolean>>) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem_chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem_chains.ZkSyncTransactionType;
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                    l2ToL1Logs: viem_chains.ZkSyncL2ToL1Log[];
                };
                type: "transactionReceipt";
            };
            readonly transactionRequest: {
                exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.ZkSyncTransactionRequest>) => ({
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                }) & {
                    gasPerPubdata: never;
                    paymaster: never;
                    factoryDeps: never;
                    paymasterInput: never;
                    customSignature: never;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.ZkSyncTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "zksync-era";
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://era.zksync.network/";
                readonly apiUrl: "https://api-era.zksync.network/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
            };
        };
        id: 324;
        name: "zkSync Era";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Ether";
            readonly symbol: "ETH";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.era.zksync.io"];
                readonly webSocket: readonly ["wss://mainnet.era.zksync.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom: {
            readonly getEip712Domain: viem_zksync.EIP712DomainFn<viem_chains.ZkSyncTransactionSerializable, viem_chains.ZkSyncEIP712TransactionSignable>;
        };
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.ZkSyncRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.ZkSyncRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.ZkSyncTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    l1BatchNumber: bigint | null;
                    l1BatchTimestamp: bigint | null;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransaction<boolean>>, viem_chains.ZkSyncRpcTransaction<boolean>>) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem_chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem_chains.ZkSyncTransactionType;
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                    l2ToL1Logs: viem_chains.ZkSyncL2ToL1Log[];
                };
                type: "transactionReceipt";
            };
            readonly transactionRequest: {
                exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.ZkSyncTransactionRequest>) => ({
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                }) & {
                    gasPerPubdata: never;
                    paymaster: never;
                    factoryDeps: never;
                    paymasterInput: never;
                    customSignature: never;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.ZkSyncTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "zksync-era";
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://era.zksync.network/";
                readonly apiUrl: "https://api-era.zksync.network/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
            };
        };
        id: 324;
        name: "zkSync Era";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Ether";
            readonly symbol: "ETH";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.era.zksync.io"];
                readonly webSocket: readonly ["wss://mainnet.era.zksync.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom: {
            readonly getEip712Domain: viem_zksync.EIP712DomainFn<viem_chains.ZkSyncTransactionSerializable, viem_chains.ZkSyncEIP712TransactionSignable>;
        };
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.ZkSyncRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.ZkSyncRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.ZkSyncTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    l1BatchNumber: bigint | null;
                    l1BatchTimestamp: bigint | null;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransaction<boolean>>, viem_chains.ZkSyncRpcTransaction<boolean>>) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem_chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem_chains.ZkSyncTransactionType;
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                    l2ToL1Logs: viem_chains.ZkSyncL2ToL1Log[];
                };
                type: "transactionReceipt";
            };
            readonly transactionRequest: {
                exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.ZkSyncTransactionRequest>) => ({
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                }) & {
                    gasPerPubdata: never;
                    paymaster: never;
                    factoryDeps: never;
                    paymasterInput: never;
                    customSignature: never;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.ZkSyncTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "zksync-era";
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://era.zksync.network/";
                readonly apiUrl: "https://api-era.zksync.network/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xF9cda624FBC7e059355ce98a31693d299FACd963";
            };
        };
        id: 324;
        name: "zkSync Era";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Ether";
            readonly symbol: "ETH";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://mainnet.era.zksync.io"];
                readonly webSocket: readonly ["wss://mainnet.era.zksync.io/ws"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom: {
            readonly getEip712Domain: viem_zksync.EIP712DomainFn<viem_chains.ZkSyncTransactionSerializable, viem_chains.ZkSyncEIP712TransactionSignable>;
        };
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.ZkSyncRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.ZkSyncRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.ZkSyncTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                    l1BatchNumber: bigint | null;
                    l1BatchTimestamp: bigint | null;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransaction<boolean>>, viem_chains.ZkSyncRpcTransaction<boolean>>) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip712" | "priority";
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.ZkSyncRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem_chains.ZkSyncLog<bigint, number, boolean, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem_chains.ZkSyncTransactionType;
                    l1BatchNumber: bigint | null;
                    l1BatchTxIndex: bigint | null;
                    l2ToL1Logs: viem_chains.ZkSyncL2ToL1Log[];
                };
                type: "transactionReceipt";
            };
            readonly transactionRequest: {
                exclude: ("gasPerPubdata" | "paymaster" | "factoryDeps" | "paymasterInput" | "customSignature")[] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.TransactionRequest<bigint, number>>, viem_chains.ZkSyncTransactionRequest>) => ({
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    type?: "0x0" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x1" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type?: "0x2" | undefined;
                    maxFeePerBlobGas?: undefined;
                    eip712Meta?: undefined;
                } | {
                    data?: `0x${string}` | undefined;
                    from: `0x${string}`;
                    gas?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    type: "0xff" | "0x71";
                    maxFeePerBlobGas?: undefined;
                    eip712Meta: viem_chains.ZkSyncEip712Meta;
                }) & {
                    gasPerPubdata: never;
                    paymaster: never;
                    factoryDeps: never;
                    paymasterInput: never;
                    customSignature: never;
                };
                type: "transactionRequest";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.ZkSyncTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "zksync-era";
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const harmonyClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Harmony Explorer";
                readonly url: "https://explorer.harmony.one";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 24185753;
            };
        };
        id: 1666600000;
        name: "Harmony One";
        nativeCurrency: {
            readonly name: "Harmony";
            readonly symbol: "ONE";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/harmony"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Harmony Explorer";
                readonly url: "https://explorer.harmony.one";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 24185753;
            };
        };
        id: 1666600000;
        name: "Harmony One";
        nativeCurrency: {
            readonly name: "Harmony";
            readonly symbol: "ONE";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/harmony"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Harmony Explorer";
                readonly url: "https://explorer.harmony.one";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 24185753;
            };
        };
        id: 1666600000;
        name: "Harmony One";
        nativeCurrency: {
            readonly name: "Harmony";
            readonly symbol: "ONE";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/harmony"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Harmony Explorer";
                readonly url: "https://explorer.harmony.one";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 24185753;
            };
        };
        id: 1666600000;
        name: "Harmony One";
        nativeCurrency: {
            readonly name: "Harmony";
            readonly symbol: "ONE";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/harmony"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Harmony Explorer";
                readonly url: "https://explorer.harmony.one";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 24185753;
            };
        };
        id: 1666600000;
        name: "Harmony One";
        nativeCurrency: {
            readonly name: "Harmony";
            readonly symbol: "ONE";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/harmony"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const fujiClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowTrace";
                readonly url: "https://testnet.snowtrace.io";
                readonly apiUrl: "https://api-testnet.snowtrace.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7096959;
            };
        };
        id: 43113;
        name: "Avalanche Fuji";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche Fuji";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax-test.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowTrace";
                readonly url: "https://testnet.snowtrace.io";
                readonly apiUrl: "https://api-testnet.snowtrace.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7096959;
            };
        };
        id: 43113;
        name: "Avalanche Fuji";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche Fuji";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax-test.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "SnowTrace";
                readonly url: "https://testnet.snowtrace.io";
                readonly apiUrl: "https://api-testnet.snowtrace.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7096959;
            };
        };
        id: 43113;
        name: "Avalanche Fuji";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche Fuji";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax-test.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowTrace";
                readonly url: "https://testnet.snowtrace.io";
                readonly apiUrl: "https://api-testnet.snowtrace.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7096959;
            };
        };
        id: 43113;
        name: "Avalanche Fuji";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche Fuji";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax-test.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "SnowTrace";
                readonly url: "https://testnet.snowtrace.io";
                readonly apiUrl: "https://api-testnet.snowtrace.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 7096959;
            };
        };
        id: 43113;
        name: "Avalanche Fuji";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Avalanche Fuji";
            readonly symbol: "AVAX";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://api.avax-test.network/ext/bc/C/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const mumbaiClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://mumbai.polygonscan.com";
                readonly apiUrl: "https://mumbai.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 80001;
        name: "Polygon Mumbai";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/polygon_mumbai"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://mumbai.polygonscan.com";
                readonly apiUrl: "https://mumbai.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 80001;
        name: "Polygon Mumbai";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/polygon_mumbai"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://mumbai.polygonscan.com";
                readonly apiUrl: "https://mumbai.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 80001;
        name: "Polygon Mumbai";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/polygon_mumbai"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://mumbai.polygonscan.com";
                readonly apiUrl: "https://mumbai.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 80001;
        name: "Polygon Mumbai";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/polygon_mumbai"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "PolygonScan";
                readonly url: "https://mumbai.polygonscan.com";
                readonly apiUrl: "https://mumbai.polygonscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 25770160;
            };
        };
        id: 80001;
        name: "Polygon Mumbai";
        nativeCurrency: {
            readonly name: "MATIC";
            readonly symbol: "MATIC";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/polygon_mumbai"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const sepoliaClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://sepolia.etherscan.io";
                readonly apiUrl: "https://api-sepolia.etherscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 751532;
            };
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xBaBC7678D7A63104f1658c11D6AE9A21cdA09725";
                readonly blockCreated: 5043334;
            };
        };
        id: 11155111;
        name: "Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "SEP";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.sepolia.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://sepolia.etherscan.io";
                readonly apiUrl: "https://api-sepolia.etherscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 751532;
            };
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xBaBC7678D7A63104f1658c11D6AE9A21cdA09725";
                readonly blockCreated: 5043334;
            };
        };
        id: 11155111;
        name: "Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "SEP";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.sepolia.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://sepolia.etherscan.io";
                readonly apiUrl: "https://api-sepolia.etherscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 751532;
            };
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xBaBC7678D7A63104f1658c11D6AE9A21cdA09725";
                readonly blockCreated: 5043334;
            };
        };
        id: 11155111;
        name: "Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "SEP";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.sepolia.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://sepolia.etherscan.io";
                readonly apiUrl: "https://api-sepolia.etherscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 751532;
            };
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xBaBC7678D7A63104f1658c11D6AE9A21cdA09725";
                readonly blockCreated: 5043334;
            };
        };
        id: 11155111;
        name: "Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "SEP";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.sepolia.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://sepolia.etherscan.io";
                readonly apiUrl: "https://api-sepolia.etherscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 751532;
            };
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xBaBC7678D7A63104f1658c11D6AE9A21cdA09725";
                readonly blockCreated: 5043334;
            };
        };
        id: 11155111;
        name: "Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "SEP";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.sepolia.org"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const goerliClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli.etherscan.io";
                readonly apiUrl: "https://api-goerli.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1";
                readonly blockCreated: 10339206;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 6507670;
            };
        };
        id: 5;
        name: "Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/eth_goerli"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli.etherscan.io";
                readonly apiUrl: "https://api-goerli.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1";
                readonly blockCreated: 10339206;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 6507670;
            };
        };
        id: 5;
        name: "Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/eth_goerli"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli.etherscan.io";
                readonly apiUrl: "https://api-goerli.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1";
                readonly blockCreated: 10339206;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 6507670;
            };
        };
        id: 5;
        name: "Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/eth_goerli"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli.etherscan.io";
                readonly apiUrl: "https://api-goerli.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1";
                readonly blockCreated: 10339206;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 6507670;
            };
        };
        id: 5;
        name: "Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/eth_goerli"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli.etherscan.io";
                readonly apiUrl: "https://api-goerli.etherscan.io/api";
            };
        };
        contracts: {
            readonly ensRegistry: {
                readonly address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
            };
            readonly ensUniversalResolver: {
                readonly address: "0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1";
                readonly blockCreated: 10339206;
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 6507670;
            };
        };
        id: 5;
        name: "Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.ankr.com/eth_goerli"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const arbitrumGoerliClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://goerli.arbiscan.io";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 88114;
            };
        };
        id: 421613;
        name: "Arbitrum Goerli";
        nativeCurrency: {
            readonly name: "Arbitrum Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://goerli.arbiscan.io";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 88114;
            };
        };
        id: 421613;
        name: "Arbitrum Goerli";
        nativeCurrency: {
            readonly name: "Arbitrum Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://goerli.arbiscan.io";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 88114;
            };
        };
        id: 421613;
        name: "Arbitrum Goerli";
        nativeCurrency: {
            readonly name: "Arbitrum Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://goerli.arbiscan.io";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 88114;
            };
        };
        id: 421613;
        name: "Arbitrum Goerli";
        nativeCurrency: {
            readonly name: "Arbitrum Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://goerli.arbiscan.io";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 88114;
            };
        };
        id: 421613;
        name: "Arbitrum Goerli";
        nativeCurrency: {
            readonly name: "Arbitrum Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const arbitrumSepoliaClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://sepolia.arbiscan.io";
                readonly apiUrl: "https://sepolia.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 81930;
            };
        };
        id: 421614;
        name: "Arbitrum Sepolia";
        nativeCurrency: {
            readonly name: "Arbitrum Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://sepolia.arbiscan.io";
                readonly apiUrl: "https://sepolia.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 81930;
            };
        };
        id: 421614;
        name: "Arbitrum Sepolia";
        nativeCurrency: {
            readonly name: "Arbitrum Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://sepolia.arbiscan.io";
                readonly apiUrl: "https://sepolia.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 81930;
            };
        };
        id: 421614;
        name: "Arbitrum Sepolia";
        nativeCurrency: {
            readonly name: "Arbitrum Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://sepolia.arbiscan.io";
                readonly apiUrl: "https://sepolia.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 81930;
            };
        };
        id: 421614;
        name: "Arbitrum Sepolia";
        nativeCurrency: {
            readonly name: "Arbitrum Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Arbiscan";
                readonly url: "https://sepolia.arbiscan.io";
                readonly apiUrl: "https://sepolia.arbiscan.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 81930;
            };
        };
        id: 421614;
        name: "Arbitrum Sepolia";
        nativeCurrency: {
            readonly name: "Arbitrum Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rollup.arbitrum.io/rpc"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const optimismGoerliClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli-optimism.etherscan.io";
                readonly apiUrl: "https://goerli-optimism.etherscan.io/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 5: {
                    readonly address: "0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 49461;
            };
            readonly portal: {
                readonly 5: {
                    readonly address: "0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383";
                };
            };
            readonly l1StandardBridge: {
                readonly 5: {
                    readonly address: "0x636Af16bf2f682dD3109e60102b8E1A089FedAa8";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 420;
        name: "Optimism Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli.optimism.io"];
            };
        };
        sourceId: 5;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli-optimism.etherscan.io";
                readonly apiUrl: "https://goerli-optimism.etherscan.io/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 5: {
                    readonly address: "0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 49461;
            };
            readonly portal: {
                readonly 5: {
                    readonly address: "0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383";
                };
            };
            readonly l1StandardBridge: {
                readonly 5: {
                    readonly address: "0x636Af16bf2f682dD3109e60102b8E1A089FedAa8";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 420;
        name: "Optimism Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli.optimism.io"];
            };
        };
        sourceId: 5;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli-optimism.etherscan.io";
                readonly apiUrl: "https://goerli-optimism.etherscan.io/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 5: {
                    readonly address: "0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 49461;
            };
            readonly portal: {
                readonly 5: {
                    readonly address: "0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383";
                };
            };
            readonly l1StandardBridge: {
                readonly 5: {
                    readonly address: "0x636Af16bf2f682dD3109e60102b8E1A089FedAa8";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 420;
        name: "Optimism Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli.optimism.io"];
            };
        };
        sourceId: 5;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli-optimism.etherscan.io";
                readonly apiUrl: "https://goerli-optimism.etherscan.io/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 5: {
                    readonly address: "0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 49461;
            };
            readonly portal: {
                readonly 5: {
                    readonly address: "0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383";
                };
            };
            readonly l1StandardBridge: {
                readonly 5: {
                    readonly address: "0x636Af16bf2f682dD3109e60102b8E1A089FedAa8";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 420;
        name: "Optimism Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli.optimism.io"];
            };
        };
        sourceId: 5;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Etherscan";
                readonly url: "https://goerli-optimism.etherscan.io";
                readonly apiUrl: "https://goerli-optimism.etherscan.io/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 5: {
                    readonly address: "0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 49461;
            };
            readonly portal: {
                readonly 5: {
                    readonly address: "0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383";
                };
            };
            readonly l1StandardBridge: {
                readonly 5: {
                    readonly address: "0x636Af16bf2f682dD3109e60102b8E1A089FedAa8";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 420;
        name: "Optimism Goerli";
        nativeCurrency: {
            readonly name: "Goerli Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://goerli.optimism.io"];
            };
        };
        sourceId: 5;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const optimismSepoliaClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://optimism-sepolia.blockscout.com";
                readonly apiUrl: "https://optimism-sepolia.blockscout.com/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1620204;
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x16Fc5058F25648194471939df75CF27A2fdC48BC";
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 11155420;
        name: "OP Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.optimism.io"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://optimism-sepolia.blockscout.com";
                readonly apiUrl: "https://optimism-sepolia.blockscout.com/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1620204;
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x16Fc5058F25648194471939df75CF27A2fdC48BC";
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 11155420;
        name: "OP Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.optimism.io"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://optimism-sepolia.blockscout.com";
                readonly apiUrl: "https://optimism-sepolia.blockscout.com/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1620204;
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x16Fc5058F25648194471939df75CF27A2fdC48BC";
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 11155420;
        name: "OP Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.optimism.io"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://optimism-sepolia.blockscout.com";
                readonly apiUrl: "https://optimism-sepolia.blockscout.com/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1620204;
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x16Fc5058F25648194471939df75CF27A2fdC48BC";
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 11155420;
        name: "OP Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.optimism.io"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://optimism-sepolia.blockscout.com";
                readonly apiUrl: "https://optimism-sepolia.blockscout.com/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F";
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1620204;
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x16Fc5058F25648194471939df75CF27A2fdC48BC";
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1";
                };
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 11155420;
        name: "OP Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.optimism.io"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const scrollSepoliaClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://sepolia-blockscout.scroll.io";
                readonly apiUrl: "https://sepolia-blockscout.scroll.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 9473;
            };
        };
        id: 534351;
        name: "Scroll Sepolia";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rpc.scroll.io"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://sepolia-blockscout.scroll.io";
                readonly apiUrl: "https://sepolia-blockscout.scroll.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 9473;
            };
        };
        id: 534351;
        name: "Scroll Sepolia";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rpc.scroll.io"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://sepolia-blockscout.scroll.io";
                readonly apiUrl: "https://sepolia-blockscout.scroll.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 9473;
            };
        };
        id: 534351;
        name: "Scroll Sepolia";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rpc.scroll.io"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://sepolia-blockscout.scroll.io";
                readonly apiUrl: "https://sepolia-blockscout.scroll.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 9473;
            };
        };
        id: 534351;
        name: "Scroll Sepolia";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rpc.scroll.io"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Blockscout";
                readonly url: "https://sepolia-blockscout.scroll.io";
                readonly apiUrl: "https://sepolia-blockscout.scroll.io/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 9473;
            };
        };
        id: 534351;
        name: "Scroll Sepolia";
        nativeCurrency: {
            readonly name: "Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia-rpc.scroll.io"];
            };
        };
        sourceId?: number | undefined;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const fantomTestnetClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://testnet.ftmscan.com";
                readonly apiUrl: "https://testnet.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 8328688;
            };
        };
        id: 4002;
        name: "Fantom Testnet";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.testnet.fantom.network"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://testnet.ftmscan.com";
                readonly apiUrl: "https://testnet.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 8328688;
            };
        };
        id: 4002;
        name: "Fantom Testnet";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.testnet.fantom.network"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://testnet.ftmscan.com";
                readonly apiUrl: "https://testnet.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 8328688;
            };
        };
        id: 4002;
        name: "Fantom Testnet";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.testnet.fantom.network"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://testnet.ftmscan.com";
                readonly apiUrl: "https://testnet.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 8328688;
            };
        };
        id: 4002;
        name: "Fantom Testnet";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.testnet.fantom.network"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "FTMScan";
                readonly url: "https://testnet.ftmscan.com";
                readonly apiUrl: "https://testnet.ftmscan.com/api";
            };
        };
        contracts: {
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 8328688;
            };
        };
        id: 4002;
        name: "Fantom Testnet";
        nativeCurrency: {
            readonly decimals: 18;
            readonly name: "Fantom";
            readonly symbol: "FTM";
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://rpc.testnet.fantom.network"];
            };
        };
        sourceId?: number | undefined;
        testnet?: boolean | undefined;
        custom?: Record<string, unknown> | undefined;
        formatters?: undefined;
        serializers?: viem.ChainSerializers<undefined> | undefined;
        fees?: viem.ChainFees<undefined> | undefined;
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const baseSepoliaClient: {
    account: undefined;
    batch?: {
        multicall?: boolean | {
            batchSize?: number | undefined;
            wait?: number | undefined;
        } | undefined;
    } | undefined;
    cacheTime: number;
    chain: {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://sepolia.basescan.org";
                readonly apiUrl: "https://api-sepolia.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254";
                };
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x49f53e41452c74589e85ca1677426ba426459e85";
                    readonly blockCreated: 4446677;
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120";
                    readonly blockCreated: 4446677;
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1059647;
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 84532;
        name: "Base Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.base.org"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "base-sepolia";
    };
    key: string;
    name: string;
    pollingInterval: number;
    request: viem.EIP1193RequestFn<[{
        Method: "web3_clientVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "web3_sha3";
        Parameters: [data: `0x${string}`];
        ReturnType: string;
    }, {
        Method: "net_listening";
        Parameters?: undefined;
        ReturnType: boolean;
    }, {
        Method: "net_peerCount";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "net_version";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blobGasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_blockNumber";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_call";
        Parameters: [transaction: Partial<viem.RpcTransactionRequest>] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier] | [transaction: Partial<viem.RpcTransactionRequest>, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier, stateOverrideSet: viem.RpcStateOverride];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_coinbase";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_feeHistory";
        Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | viem.BlockTag, rewardPercentiles: number[] | undefined];
        ReturnType: viem.RpcFeeHistory;
    }, {
        Method: "eth_gasPrice";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBalance";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockByHash";
        Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag, includeTransactionObjects: boolean];
        ReturnType: viem.RpcBlock | null;
    }, {
        Method: "eth_getBlockTransactionCountByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getBlockTransactionCountByNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getCode";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getFilterChanges";
        Parameters: [filterId: `0x${string}`];
        ReturnType: `0x${string}`[] | viem.RpcLog[];
    }, {
        Method: "eth_getFilterLogs";
        Parameters: [filterId: `0x${string}`];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getLogs";
        Parameters: [{
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        } & ({
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            blockHash?: undefined;
        } | {
            fromBlock?: undefined;
            toBlock?: undefined;
            blockHash?: `0x${string}` | undefined;
        })];
        ReturnType: viem.RpcLog[];
    }, {
        Method: "eth_getProof";
        Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | viem.BlockTag];
        ReturnType: viem.RpcProof;
    }, {
        Method: "eth_getStorageAt";
        Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionByHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransaction | null;
    }, {
        Method: "eth_getTransactionCount";
        Parameters: [address: `0x${string}`, block: `0x${string}` | viem.BlockTag | viem.RpcBlockIdentifier];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getTransactionReceipt";
        Parameters: [hash: `0x${string}`];
        ReturnType: viem.RpcTransactionReceipt | null;
    }, {
        Method: "eth_getUncleByBlockHashAndIndex";
        Parameters: [hash: `0x${string}`, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleByBlockNumberAndIndex";
        Parameters: [block: `0x${string}` | viem.BlockTag, index: `0x${string}`];
        ReturnType: viem.RpcUncle | null;
    }, {
        Method: "eth_getUncleCountByBlockHash";
        Parameters: [hash: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_getUncleCountByBlockNumber";
        Parameters: [block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_maxPriorityFeePerGas";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newBlockFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newFilter";
        Parameters: [filter: {
            fromBlock?: `0x${string}` | viem.BlockTag | undefined;
            toBlock?: `0x${string}` | viem.BlockTag | undefined;
            address?: `0x${string}` | `0x${string}`[] | undefined;
            topics?: viem.LogTopic[] | undefined;
        }];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_newPendingTransactionFilter";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_protocolVersion";
        Parameters?: undefined;
        ReturnType: string;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_uninstallFilter";
        Parameters: [filterId: `0x${string}`];
        ReturnType: boolean;
    }, {
        Method: "eth_accounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_chainId";
        Parameters?: undefined;
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_estimateGas";
        Parameters: [transaction: viem.RpcTransactionRequest] | [transaction: viem.RpcTransactionRequest, block: `0x${string}` | viem.BlockTag];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_requestAccounts";
        Parameters?: undefined;
        ReturnType: `0x${string}`[];
    }, {
        Method: "eth_sendTransaction";
        Parameters: [transaction: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sendRawTransaction";
        Parameters: [signedTransaction: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_sign";
        Parameters: [address: `0x${string}`, data: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTransaction";
        Parameters: [request: viem.RpcTransactionRequest];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_signTypedData_v4";
        Parameters: [address: `0x${string}`, message: string];
        ReturnType: `0x${string}`;
    }, {
        Method: "eth_syncing";
        Parameters?: undefined;
        ReturnType: false | viem.NetworkSync;
    }, {
        Method: "personal_sign";
        Parameters: [data: `0x${string}`, address: `0x${string}`];
        ReturnType: `0x${string}`;
    }, {
        Method: "wallet_addEthereumChain";
        Parameters: [chain: viem.AddEthereumChainParameter];
        ReturnType: null;
    }, {
        Method: "wallet_getPermissions";
        Parameters?: undefined;
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_requestPermissions";
        Parameters: [permissions: {
            eth_accounts: Record<string, any>;
        }];
        ReturnType: viem.WalletPermission[];
    }, {
        Method: "wallet_switchEthereumChain";
        Parameters: [chain: {
            chainId: string;
        }];
        ReturnType: null;
    }, {
        Method: "wallet_watchAsset";
        Parameters: viem.WatchAssetParams;
        ReturnType: boolean;
    }]>;
    transport: viem.TransportConfig<"http", viem.EIP1193RequestFn> & {
        fetchOptions?: Omit<RequestInit, "body"> | undefined;
        url?: string | undefined;
    };
    type: string;
    uid: string;
    extend: <const client extends {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } & Partial<Pick<viem.PublicActions<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://sepolia.basescan.org";
                readonly apiUrl: "https://api-sepolia.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254";
                };
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x49f53e41452c74589e85ca1677426ba426459e85";
                    readonly blockCreated: 4446677;
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120";
                    readonly blockCreated: 4446677;
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1059647;
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 84532;
        name: "Base Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.base.org"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "base-sepolia";
    }, undefined>, "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getChainId" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "prepareTransactionRequest" | "readContract" | "sendRawTransaction" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<viem.WalletActions<{
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://sepolia.basescan.org";
                readonly apiUrl: "https://api-sepolia.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254";
                };
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x49f53e41452c74589e85ca1677426ba426459e85";
                    readonly blockCreated: 4446677;
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120";
                    readonly blockCreated: 4446677;
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1059647;
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 84532;
        name: "Base Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.base.org"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "base-sepolia";
    }, undefined>, "sendTransaction" | "writeContract">>>(fn: (client: Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://sepolia.basescan.org";
                readonly apiUrl: "https://api-sepolia.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254";
                };
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x49f53e41452c74589e85ca1677426ba426459e85";
                    readonly blockCreated: 4446677;
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120";
                    readonly blockCreated: 4446677;
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1059647;
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 84532;
        name: "Base Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.base.org"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "base-sepolia";
    }, undefined, undefined, {
        [x: string]: unknown;
        account?: undefined;
        batch?: undefined;
        cacheTime?: undefined;
        chain?: undefined;
        key?: undefined;
        name?: undefined;
        pollingInterval?: undefined;
        request?: undefined;
        transport?: undefined;
        type?: undefined;
        uid?: undefined;
    } | undefined>) => client) => Client<viem.HttpTransport, {
        blockExplorers: {
            readonly default: {
                readonly name: "Basescan";
                readonly url: "https://sepolia.basescan.org";
                readonly apiUrl: "https://api-sepolia.basescan.org/api";
            };
        };
        contracts: {
            readonly l2OutputOracle: {
                readonly 11155111: {
                    readonly address: "0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254";
                };
            };
            readonly portal: {
                readonly 11155111: {
                    readonly address: "0x49f53e41452c74589e85ca1677426ba426459e85";
                    readonly blockCreated: 4446677;
                };
            };
            readonly l1StandardBridge: {
                readonly 11155111: {
                    readonly address: "0xfd0Bf71F60660E2f608ed56e1659C450eB113120";
                    readonly blockCreated: 4446677;
                };
            };
            readonly multicall3: {
                readonly address: "0xca11bde05977b3631167028862be2a173976ca11";
                readonly blockCreated: 1059647;
            };
            readonly gasPriceOracle: {
                readonly address: "0x420000000000000000000000000000000000000F";
            };
            readonly l1Block: {
                readonly address: "0x4200000000000000000000000000000000000015";
            };
            readonly l2CrossDomainMessenger: {
                readonly address: "0x4200000000000000000000000000000000000007";
            };
            readonly l2Erc721Bridge: {
                readonly address: "0x4200000000000000000000000000000000000014";
            };
            readonly l2StandardBridge: {
                readonly address: "0x4200000000000000000000000000000000000010";
            };
            readonly l2ToL1MessagePasser: {
                readonly address: "0x4200000000000000000000000000000000000016";
            };
        };
        id: 84532;
        name: "Base Sepolia";
        nativeCurrency: {
            readonly name: "Sepolia Ether";
            readonly symbol: "ETH";
            readonly decimals: 18;
        };
        rpcUrls: {
            readonly default: {
                readonly http: readonly ["https://sepolia.base.org"];
            };
        };
        sourceId: 11155111;
        testnet: true;
        custom?: Record<string, unknown> | undefined;
        formatters: {
            readonly block: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcBlock<viem.BlockTag, boolean, viem.RpcTransaction<boolean>>>, viem_chains.OpStackRpcBlockOverrides & {
                    transactions: `0x${string}`[] | viem_chains.OpStackRpcTransaction<boolean>[];
                }>) => {
                    baseFeePerGas: bigint | null;
                    blobGasUsed: bigint;
                    difficulty: bigint;
                    excessBlobGas: bigint;
                    extraData: `0x${string}`;
                    gasLimit: bigint;
                    gasUsed: bigint;
                    hash: `0x${string}` | null;
                    logsBloom: `0x${string}` | null;
                    miner: `0x${string}`;
                    mixHash: `0x${string}`;
                    nonce: `0x${string}` | null;
                    number: bigint | null;
                    parentHash: `0x${string}`;
                    receiptsRoot: `0x${string}`;
                    sealFields: `0x${string}`[];
                    sha3Uncles: `0x${string}`;
                    size: bigint;
                    stateRoot: `0x${string}`;
                    timestamp: bigint;
                    totalDifficulty: bigint | null;
                    transactions: `0x${string}`[] | viem_chains.OpStackTransaction<boolean>[];
                    transactionsRoot: `0x${string}`;
                    uncles: `0x${string}`[];
                    withdrawals?: viem.Withdrawal[] | undefined;
                    withdrawalsRoot?: `0x${string}` | undefined;
                };
                type: "block";
            };
            readonly transaction: {
                exclude: [] | undefined;
                format: (args: ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionLegacy<`0x${string}`, `0x${string}`, boolean, "0x0">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP2930<`0x${string}`, `0x${string}`, boolean, "0x1">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP1559<`0x${string}`, `0x${string}`, boolean, "0x2">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & viem_chains.Omit<viem_chains.PartialBy<viem.TransactionEIP4844<`0x${string}`, `0x${string}`, boolean, "0x3">, "yParity">, "typeHex"> & {
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                }) | ({
                    type?: "0x0" | "0x1" | "0x2" | "0x3" | "0x7e" | undefined;
                    gas?: `0x${string}` | undefined;
                    value?: `0x${string}` | undefined;
                    gasPrice?: `0x${string}` | undefined;
                    maxFeePerBlobGas?: `0x${string}` | undefined;
                    maxFeePerGas?: `0x${string}` | undefined;
                    maxPriorityFeePerGas?: `0x${string}` | undefined;
                    yParity?: `0x${string}` | undefined;
                    blockHash?: `0x${string}` | null | undefined;
                    blockNumber?: `0x${string}` | null | undefined;
                    from?: `0x${string}` | undefined;
                    hash?: `0x${string}` | undefined;
                    input?: `0x${string}` | undefined;
                    nonce?: `0x${string}` | undefined;
                    r?: `0x${string}` | undefined;
                    s?: `0x${string}` | undefined;
                    to?: `0x${string}` | null | undefined;
                    transactionIndex?: `0x${string}` | null | undefined;
                    v?: `0x${string}` | undefined;
                    accessList?: viem.AccessList | undefined;
                    blobVersionedHashes?: `0x${string}`[] | undefined;
                    chainId?: `0x${string}` | undefined;
                } & Omit<viem.TransactionBase<`0x${string}`, `0x${string}`, boolean>, "typeHex"> & viem.FeeValuesEIP1559<`0x${string}`> & {
                    isSystemTx?: boolean | undefined;
                    mint?: `0x${string}` | undefined;
                    sourceHash: `0x${string}`;
                    type: "0x7e";
                })) => {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity?: undefined;
                    type: "legacy";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    gas: bigint;
                    value: bigint;
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList?: undefined;
                    blobVersionedHashes?: undefined;
                    chainId?: number | undefined;
                    yParity: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas?: undefined;
                    maxPriorityFeePerGas?: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice: bigint;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: undefined;
                    maxPriorityFeePerGas: undefined;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip2930";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "eip1559";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas?: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes?: undefined;
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: bigint;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "eip4844";
                    isSystemTx?: undefined;
                    mint?: undefined;
                    sourceHash?: undefined;
                } | {
                    blockHash: `0x${string}` | null;
                    blockNumber: bigint | null;
                    from: `0x${string}`;
                    gas: bigint;
                    hash: `0x${string}`;
                    input: `0x${string}`;
                    nonce: number;
                    r: `0x${string}`;
                    s: `0x${string}`;
                    to: `0x${string}` | null;
                    transactionIndex: number | null;
                    typeHex: `0x${string}` | null;
                    v: bigint;
                    value: bigint;
                    yParity: number;
                    gasPrice?: undefined;
                    maxFeePerBlobGas: undefined;
                    maxFeePerGas: bigint;
                    maxPriorityFeePerGas: bigint;
                    accessList: viem.AccessList;
                    blobVersionedHashes: `0x${string}`[];
                    chainId: number;
                    type: "deposit";
                    isSystemTx?: boolean | undefined;
                    mint?: bigint | undefined;
                    sourceHash: `0x${string}`;
                };
                type: "transaction";
            };
            readonly transactionReceipt: {
                exclude: [] | undefined;
                format: (args: viem_chains.Assign<Partial<viem.RpcTransactionReceipt>, viem_chains.OpStackRpcTransactionReceiptOverrides>) => {
                    blobGasPrice?: bigint | undefined;
                    blobGasUsed?: bigint | undefined;
                    blockHash: `0x${string}`;
                    blockNumber: bigint;
                    contractAddress: `0x${string}` | null;
                    cumulativeGasUsed: bigint;
                    effectiveGasPrice: bigint;
                    from: `0x${string}`;
                    gasUsed: bigint;
                    logs: viem.Log<bigint, number, false, undefined, undefined, undefined, undefined>[];
                    logsBloom: `0x${string}`;
                    root?: `0x${string}` | undefined;
                    status: "success" | "reverted";
                    to: `0x${string}` | null;
                    transactionHash: `0x${string}`;
                    transactionIndex: number;
                    type: viem.TransactionType;
                    l1GasPrice: bigint | null;
                    l1GasUsed: bigint | null;
                    l1Fee: bigint | null;
                    l1FeeScalar: number | null;
                };
                type: "transactionReceipt";
            };
        };
        serializers: {
            readonly transaction: (transaction: viem_chains.OpStackTransactionSerializable, signature?: viem.Signature | undefined) => `0x${string}` | `0x02${string}` | `0x01${string}`;
        };
        fees?: viem.ChainFees<undefined> | undefined;
        readonly network: "base-sepolia";
    }, undefined, undefined, { [K in keyof client]: client[K]; }>;
};
declare const CHAIN_ID_CLIENT_MAP: Record<number, Client>;

declare function baseToCidv0(hash: string): string;

declare function uploadToPinata(source: string): Promise<any>;
declare function uploadToTheGraph(source: string): Promise<any>;
declare function uploadToQuicknode(source: string, key?: string): Promise<string>;

type ProposalMetadata = {
    title: string;
    description: string;
    ipfsHash: string;
    discussions: string;
    author: string;
};
declare function getLink(hash: string, gateway: string): string;
declare function getProposalMetadata(hash: string, gateway?: string): Promise<ProposalMetadata>;

/**
 * @notice Returns the storage slot for a Solidity mapping with bytes32 keys, given the slot of the mapping itself
 * @dev Read more at https://docs.soliditylang.org/en/latest/internals/layout_in_storage.html#mappings-and-dynamic-arrays
 * @param mappingSlot Mapping slot in storage
 * @param key Mapping key to find slot for
 * @returns Storage slot
 */
declare function getSolidityStorageSlotBytes(mappingSlot: Hex, key: Hex): `0x${string}`;
/**
 * @notice Returns the storage slot for a Solidity mapping with uint keys, given the slot of the mapping itself
 * @dev Read more at https://docs.soliditylang.org/en/latest/internals/layout_in_storage.html#mappings-and-dynamic-arrays
 * @param mappingSlot Mapping slot in storage
 * @param key Mapping key to find slot for
 * @returns Storage slot
 */
declare function getSolidityStorageSlotUint(mappingSlot: bigint, key: bigint): `0x${string}`;
declare function getSolidityStorageSlotAddress(mappingSlot: bigint | number, key: Hex): `0x${string}`;
/**
 * Returns the slot of an array item
 * @param baseSlot baseSlot of the array size pointer
 * @param arrayIndex index within the array
 * @param itemSize number of slots consumed per array item
 * @returns
 */
declare function getDynamicArraySlot(baseSlot: bigint, arrayIndex: number, itemSize: number): Hex;
/**
 * https://ethereum.stackexchange.com/questions/107282/storage-and-memory-layout-of-strings
 * @param value string | bytes
 */
declare function getBytesValue(value: string | Hex): `0x${string}`;
/**
 * Returns the selected bits of a uint256
 * @param _bigIntValue
 * @param startBit
 * @param endBit
 * @returns
 */
declare function getBits(_bigIntValue: bigint | number | string, startBit: bigint, _endBit: bigint): string;
/**
 * Sets the bits in a bigint
 * @param _bigIntBase
 * @param startBit inclusive
 * @param endBit exclusive
 * @param value the value to replace
 * @returns
 */
declare function setBits(_bigIntBase: bigint | number | string, startBit: bigint, endBit: bigint, _replaceValue: bigint | number): bigint;

declare function decodeReserveConfigV2(data: bigint): {
    ltv: string;
    liquidationThreshold: string;
    liquidationBonus: string;
    decimals: string;
    active: boolean;
    frozen: boolean;
    borrowingEnabled: boolean;
    stableBorrowingEnabled: boolean;
    reserveFactor: string;
};
declare function decodeReserveConfigV3(data: bigint): {
    ltv: string;
    liquidationThreshold: string;
    liquidationBonus: string;
    decimals: string;
    active: boolean;
    frozen: boolean;
    borrowingEnabled: boolean;
    stableRateBorrowingEnabled: boolean;
    paused: boolean;
    borrowingInIsolation: boolean;
    reserveFactor: string;
    borrowCap: string;
    supplyCap: string;
    liquidationProtocolFee: string;
    eModeCategory: string;
    unbackedMintCap: string;
    debtCeiling: string;
    siloedBorrowingEnabled: boolean;
    flashloaningEnabled: boolean;
};

export { CHAIN_ID_CLIENT_MAP, ChainId, type ProposalMetadata, arbitrumClient, arbitrumGoerliClient, arbitrumSepoliaClient, avalancheClient, baseClient, baseSepoliaClient, baseToCidv0, bnbClient, celoClient, compareStorageLayouts, decodeReserveConfigV2, decodeReserveConfigV3, fantomClient, fantomTestnetClient, fujiClient, getBits, getBlockAtTimestamp, getBytesValue, getContractDeploymentBlock, getDynamicArraySlot, getLink, getLogsRecursive, getProposalMetadata, getSolidityStorageSlotAddress, getSolidityStorageSlotBytes, getSolidityStorageSlotUint, gnosisClient, goerliClient, harmonyClient, mainnetClient, metisClient, mumbaiClient, optimismClient, optimismGoerliClient, optimismSepoliaClient, polygonClient, scrollClient, scrollSepoliaClient, sepoliaClient, setBits, strategicGetLogs, uploadToPinata, uploadToQuicknode, uploadToTheGraph, zkEVMClient, zkSyncClient };
